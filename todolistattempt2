   // Priority Interface
interface Priority {
    void setPriority(int priority);
    int getPriority();
}

// Complexity Interface
interface Complexity {
    void setComplexity(int complexity);
    int getComplexity();
}

// Task Class
class Task implements Priority, Complexity, Comparable<Task> {
    private String name;
    private int priority;
    private int complexity;

    public Task(String name, int priority, int complexity) {
        this.name = name;
        this.priority = priority;
        this.complexity = complexity;
    }

    // Priority Interface Methods
    @Override
    public void setPriority(int priority) {
        this.priority = priority;
    }

    @Override
    public int getPriority() {
        return priority;
    }

    // Complexity Interface Methods
    @Override
    public void setComplexity(int complexity) {
        this.complexity = complexity;
    }

    @Override
    public int getComplexity() {
        return complexity;
    }

    // Comparable Interface Method
    @Override
    public int compareTo(Task other) {
        // Compare first by priority, then by complexity if priorities are equal
        if (this.priority != other.priority) {
            return Integer.compare(this.priority, other.priority);
        }
        return Integer.compare(this.complexity, other.complexity);
    }

    @Override
    public String toString() {
        return "Task{name='" + name + "', priority=" + priority + ", complexity=" + complexity + "}";
    }
}

// Driver Class
public class ToDoList {
    public static void main(String[] args) {
        // Instantiate Tasks
        Task task1 = new Task("first task", 2, 5);
        Task task2 = new Task("secondary task", 1, 2);
        Task task3 = new Task("tertiary task", 3, 4);
        Task task4 = new Task("final task", 2, 3);

        // Add Tasks to an Array
        Task[] tasks = {task1, task2, task3, task4};

        // Sort Tasks by Priority, then Complexity
        java.util.Arrays.sort(tasks);

        // Display Sorted Tasks
        System.out.println("Tasks sorted by priority and complexity:");
        for (Task task : tasks) {
            System.out.println(task);
        }
    }
}


        return String.format("Task: %s, Priority: %d, Complexity: %d", name, priority, complexity);
    }
}
